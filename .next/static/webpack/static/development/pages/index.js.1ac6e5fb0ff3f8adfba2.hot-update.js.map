{"version":3,"file":"static/webpack/static/development/pages/index.js.1ac6e5fb0ff3f8adfba2.hot-update.js","sources":["webpack:///./app/Blog/index.js"],"sourcesContent":["import React from 'react';\nimport {getAllGraphPosts, getGraphPost} from \"../utils/graph\";\nimport {BlogPostPreview} from \"./BlogPostPreview\";\nimport styled from 'styled-components';\n\n\n\nconst BlogWrapper = styled.div`\n    display: grid;\n    grid-auto-rows: 400px;\n    grid-template-columns: repeat(3,30%);\n    grid-gap: 40px 40px;\n    width: 100vw;\n    padding: 40px;\n`\n\nexport class Blog extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            blogPostsIds: [],\n            siteId: \"a402fab0-dfc9-11e9-815b-41f22eba7175\",\n            activeId: false,\n            blogPosts: {}\n        }\n\n        this.fetchBlogPost = this.fetchBlogPost.bind(this);\n        this.updateActiveId = this.updateActiveId.bind(this);\n    }\n\n    getBlogPostsIds() {\n\n        getAllGraphPosts().then( res => {\n            this.setState({blogPostsIds:res.blogPosts})\n        })\n\n    }\n\n\n\n    async fetchBlogPost(id) {\n\n\n\n        if(this.state.blogPosts[id]) return this.state.blogPosts[id]\n\n        const blogPost = await getGraphPost(id)\n        this.setState((prevState) => {\n                let posts = {...prevState.blogPosts}\n                posts[id] = blogPost;\n            }\n         );\n        this.counter ++;\n        return blogPost\n    }\n\n    updateActiveId(id) {\n        this.setState({activeId: id})\n    }\n\n    componentDidMount() {\n        this.getBlogPostsIds()\n    }\n\n    render() {\n\n\n        return (\n            <BlogWrapper>\n                {\n                    this.state.blogPostsIds.map((id, index) => {\n                        return (<BlogPostPreview id={id} siteId={this.state.siteId} activeId={this.state.activeId}\n                                                 updateActiveId={this.updateActiveId} index={index}\n                                                 fetchBlogPost={this.fetchBlogPost}/>)\n                    })\n                }\n            </BlogWrapper>\n\n        )\n\n\n    }\n\n\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AASA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAZA;AAaA;AACA;AAjBA;AAAA;AAAA;AAkBA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAkCA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAxCA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;AAAA;AAAA;AACA;AA9CA;AAAA;AAAA;AAiDA;AACA;AAlDA;AAAA;AAAA;AAoDA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAOA;AArEA;AACA;AADA;AAAA;;;;A","sourceRoot":""}