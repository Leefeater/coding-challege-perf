{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGraphPost = exports.getAllGraphPosts = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar getAllGraphPosts = function getAllGraphPosts() {\n  var params, response;\n  return regeneratorRuntime.async(function getAllGraphPosts$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          params = {\n            url: \"api/getAllBlogPosts\",\n            method: \"post\"\n          };\n          _context.next = 3;\n          return regeneratorRuntime.awrap((0, _axios[\"default\"])(params));\n\n        case 3:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.data);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexports.getAllGraphPosts = getAllGraphPosts;\n\nvar getGraphPost = function getGraphPost(id) {\n  var params, response;\n  return regeneratorRuntime.async(function getGraphPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          console.log('calling');\n          params = {\n            url: \"api/getBlogPost\",\n            method: \"post\",\n            headers: {\n              \"post-id\": id\n            }\n          };\n          _context2.next = 4;\n          return regeneratorRuntime.awrap((0, _axios[\"default\"])(params));\n\n        case 4:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", response.data.blogPost);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\n\nexports.getGraphPost = getGraphPost;","map":{"version":3,"sources":["/Users/nhargitt/Documents/convertly/janky2/app/utils/graph.js"],"names":["getAllGraphPosts","params","url","method","response","data","getGraphPost","id","console","log","headers","blogPost"],"mappings":";;;;;;;AAAA;;;;AAEO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,UAAAA,MADsB,GACb;AACXC,YAAAA,GAAG,EAAC,qBADO;AAEXC,YAAAA,MAAM,EAAE;AAFG,WADa;AAAA;AAAA,0CAKL,uBAAMF,MAAN,CALK;;AAAA;AAKtBG,UAAAA,QALsB;AAAA,2CAOrBA,QAAQ,CAACC,IAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;;;AAUA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACMR,UAAAA,MAFkB,GAET;AACXC,YAAAA,GAAG,EAAC,iBADO;AAEXC,YAAAA,MAAM,EAAE,MAFG;AAGXO,YAAAA,OAAO,EAAC;AAAC,yBAAUH;AAAX;AAHG,WAFS;AAAA;AAAA,0CAOD,uBAAMN,MAAN,CAPC;;AAAA;AAOlBG,UAAAA,QAPkB;AAAA,4CASjBA,QAAQ,CAACC,IAAT,CAAcM,QATG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import axios from 'axios';\n\nexport const getAllGraphPosts = async () => {\n    const params = {\n        url:\"api/getAllBlogPosts\",\n        method: \"post\",\n    };\n    const response = await axios(params);\n\n    return response.data\n}\n\nexport const getGraphPost = async (id) => {\n    console.log('calling');\n    const params = {\n        url:\"api/getBlogPost\",\n        method: \"post\",\n        headers:{\"post-id\":id}\n    };\n    const response = await axios(params);\n\n    return response.data.blogPost;\n}"]},"metadata":{},"sourceType":"script"}