{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Blog = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _graph = require(\"../utils/graph\");\n\nvar _BlogPostPreview = require(\"./BlogPostPreview\");\n\nvar _styledComponents = _interopRequireDefault(require(\"styled-components\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar BlogWrapper = _styledComponents[\"default\"].div.withConfig({\n  displayName: \"Blog__BlogWrapper\",\n  componentId: \"cpre2j-0\"\n})([\"display:grid;grid-auto-rows:400px;grid-template-columns:repeat(3,30%);grid-gap:40px 40px;width:100vw;padding:40px;\"]);\n\nvar Blog = /*#__PURE__*/function (_React$Component) {\n  _inherits(Blog, _React$Component);\n\n  function Blog(props) {\n    var _this;\n\n    _classCallCheck(this, Blog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Blog).call(this, props));\n    _this.state = {\n      blogPostsIds: [],\n      siteId: \"a402fab0-dfc9-11e9-815b-41f22eba7175\",\n      activeId: false\n    };\n    _this.fetchBlogPost = _this.fetchBlogPost.bind(_assertThisInitialized(_this));\n    _this.updateActiveId = _this.updateActiveId.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Blog, [{\n    key: \"getBlogPostsIds\",\n    value: function getBlogPostsIds() {\n      var _this2 = this;\n\n      (0, _graph.getAllGraphPosts)().then(function (res) {\n        _this2.setState({\n          blogPostsIds: res.blogPosts\n        });\n      });\n    }\n  }, {\n    key: \"fetchBlogPost\",\n    value: function fetchBlogPost(id) {\n      return regeneratorRuntime.async(function fetchBlogPost$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", false);\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"updateActiveId\",\n    value: function updateActiveId(id) {\n      this.setState({\n        activeId: id\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBlogPostsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react[\"default\"].createElement(BlogWrapper, null, this.state.blogPostsIds.map(function (id, index) {\n        return _react[\"default\"].createElement(_BlogPostPreview.BlogPostPreview, {\n          id: id,\n          siteId: _this3.state.siteId,\n          activeId: _this3.state.activeId,\n          updateActiveId: _this3.updateActiveId,\n          index: index,\n          fetchBlogPost: _this3.fetchBlogPost\n        });\n      }));\n    }\n  }]);\n\n  return Blog;\n}(_react[\"default\"].Component);\n\nexports.Blog = Blog;","map":{"version":3,"sources":["/Users/nhargitt/Documents/convertly/janky2/app/Blog/index.js"],"names":["BlogWrapper","styled","div","Blog","props","state","blogPostsIds","siteId","activeId","fetchBlogPost","bind","updateActiveId","then","res","setState","blogPosts","id","getBlogPostsIds","map","index","React","Component"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAMA,WAAW,GAAGC,6BAAOC,GAAV;AAAA;AAAA;AAAA,0HAAjB;;IASaC,I;;;AAGT,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;AAGA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,MAAM,EAAE,sCAFC;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAMA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AACA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBD,IAApB,+BAAtB;AAXe;AAYlB;;;;sCAEiB;AAAA;;AAEd,qCAAmBE,IAAnB,CAAyB,UAAAC,GAAG,EAAI;AAC5B,QAAA,MAAI,CAACC,QAAL,CAAc;AAACR,UAAAA,YAAY,EAACO,GAAG,CAACE;AAAlB,SAAd;AACH,OAFD;AAIH;;;kCAEmBC,E;;;;;+CACT,K;;;;;;;;;;;;;;mCAIIA,E,EAAI;AACf,WAAKF,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAAEQ;AAAX,OAAd;AACH;;;wCAEmB;AAChB,WAAKC,eAAL;AACH;;;6BAEQ;AAAA;;AAGL,aACI,gCAAC,WAAD,QAEQ,KAAKZ,KAAL,CAAWC,YAAX,CAAwBY,GAAxB,CAA4B,UAACF,EAAD,EAAKG,KAAL,EAAe;AACvC,eAAQ,gCAAC,gCAAD;AAAiB,UAAA,EAAE,EAAEH,EAArB;AAAyB,UAAA,MAAM,EAAE,MAAI,CAACX,KAAL,CAAWE,MAA5C;AAAoD,UAAA,QAAQ,EAAE,MAAI,CAACF,KAAL,CAAWG,QAAzE;AACiB,UAAA,cAAc,EAAE,MAAI,CAACG,cADtC;AACsD,UAAA,KAAK,EAAEQ,KAD7D;AAEiB,UAAA,aAAa,EAAE,MAAI,CAACV;AAFrC,UAAR;AAGH,OAJD,CAFR,CADJ;AAcH;;;;EAvDqBW,kBAAMC,S","sourcesContent":["import React from 'react';\nimport {getAllGraphPosts, getGraphPost} from \"../utils/graph\";\nimport {BlogPostPreview} from \"./BlogPostPreview\";\nimport styled from 'styled-components';\n\n\n\nconst BlogWrapper = styled.div`\n    display: grid;\n    grid-auto-rows: 400px;\n    grid-template-columns: repeat(3,30%);\n    grid-gap: 40px 40px;\n    width: 100vw;\n    padding: 40px;\n`\n\nexport class Blog extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            blogPostsIds: [],\n            siteId: \"a402fab0-dfc9-11e9-815b-41f22eba7175\",\n            activeId: false\n        }\n\n        this.fetchBlogPost = this.fetchBlogPost.bind(this);\n        this.updateActiveId = this.updateActiveId.bind(this);\n    }\n\n    getBlogPostsIds() {\n\n        getAllGraphPosts().then( res => {\n            this.setState({blogPostsIds:res.blogPosts})\n        })\n\n    }\n\n    async fetchBlogPost(id) {\n        return false\n        return await getGraphPost(id)\n    }\n\n    updateActiveId(id) {\n        this.setState({activeId: id})\n    }\n\n    componentDidMount() {\n        this.getBlogPostsIds()\n    }\n\n    render() {\n\n\n        return (\n            <BlogWrapper>\n                {\n                    this.state.blogPostsIds.map((id, index) => {\n                        return (<BlogPostPreview id={id} siteId={this.state.siteId} activeId={this.state.activeId}\n                                                 updateActiveId={this.updateActiveId} index={index}\n                                                 fetchBlogPost={this.fetchBlogPost}/>)\n                    })\n                }\n            </BlogWrapper>\n\n        )\n\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"script"}