{"ast":null,"code":"var _jsxFileName = \"/Users/nhargitt/Documents/convertly/janky2/app/Blog/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { getAllGraphPosts, getGraphPost } from \"../utils/graph\";\nimport { BlogPostPreview } from \"./BlogPostPreview\";\nimport styled from 'styled-components';\nconst BlogWrapper = styled.div`\n    display: grid;\n    grid-auto-rows: 400px;\n    grid-template-columns: repeat(3,30%);\n    grid-gap: 40px 40px;\n    width: 100vw;\n    padding: 40px;\n`;\nexport class Blog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"counter\", 0);\n\n    this.state = {\n      blogPostsIds: [],\n      siteId: \"a402fab0-dfc9-11e9-815b-41f22eba7175\",\n      activeId: false\n    };\n    this.fetchBlogPost = this.fetchBlogPost.bind(this);\n    this.updateActiveId = this.updateActiveId.bind(this);\n  }\n\n  getBlogPostsIds() {\n    getAllGraphPosts().then(res => {\n      this.setState({\n        blogPostsIds: res.data.blogPosts\n      });\n    });\n  }\n\n  async fetchBlogPost(id) {\n    if (this.counter > 0) return false;\n    this.counter++;\n    getGraphPost(id).then(res => {\n      console.log(res);\n    });\n  }\n\n  updateActiveId(id) {\n    this.setState({\n      activeId: id\n    });\n  }\n\n  componentDidMount() {\n    this.getBlogPostsIds();\n  }\n\n  render() {\n    return __jsx(BlogWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.blogPostsIds.map(({\n      id\n    }, index) => {\n      return __jsx(BlogPostPreview, {\n        id: id,\n        siteId: this.state.siteId,\n        activeId: this.state.activeId,\n        updateActiveId: this.updateActiveId,\n        index: index,\n        fetchBlogPost: this.fetchBlogPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/nhargitt/Documents/convertly/janky2/app/Blog/index.js"],"names":["React","getAllGraphPosts","getGraphPost","BlogPostPreview","styled","BlogWrapper","div","Blog","Component","constructor","props","state","blogPostsIds","siteId","activeId","fetchBlogPost","bind","updateActiveId","getBlogPostsIds","then","res","setState","data","blogPosts","id","counter","console","log","componentDidMount","render","map","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,YAA1B,QAA6C,gBAA7C;AACA,SAAQC,eAAR,QAA8B,mBAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAIA,MAAMC,WAAW,GAAGD,MAAM,CAACE,GAAI;;;;;;;CAA/B;AASA,OAAO,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAGtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,qCAsBb,CAtBa;;AAIf,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,MAAM,EAAE,sCAFC;AAGTC,MAAAA,QAAQ,EAAE;AAHD,KAAb;AAMA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDE,EAAAA,eAAe,GAAG;AAEdjB,IAAAA,gBAAgB,GAAGkB,IAAnB,CAAyBC,GAAG,IAAI;AAE5B,WAAKC,QAAL,CAAc;AAACT,QAAAA,YAAY,EAACQ,GAAG,CAACE,IAAJ,CAASC;AAAvB,OAAd;AACH,KAHD;AAKH;;AAED,QAAMR,aAAN,CAAoBS,EAApB,EAAwB;AACpB,QAAG,KAAKC,OAAL,GAAe,CAAlB,EAAqB,OAAO,KAAP;AAC7B,SAAKA,OAAL;AACQvB,IAAAA,YAAY,CAACsB,EAAD,CAAZ,CAAiBL,IAAjB,CAAuBC,GAAG,IAAI;AAC1BM,MAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,KAFD;AAGH;;AAEDH,EAAAA,cAAc,CAACO,EAAD,EAAK;AACf,SAAKH,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAAEU;AAAX,KAAd;AACH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,eAAL;AACH;;AAEDW,EAAAA,MAAM,GAAG;AAGL,WACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKlB,KAAL,CAAWC,YAAX,CAAwBkB,GAAxB,CAA4B,CAAC;AAACN,MAAAA;AAAD,KAAD,EAAOO,KAAP,KAAiB;AACzC,aAAQ,MAAC,eAAD;AAAiB,QAAA,EAAE,EAAEP,EAArB;AAAyB,QAAA,MAAM,EAAE,KAAKb,KAAL,CAAWE,MAA5C;AAAoD,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAAzE;AACiB,QAAA,cAAc,EAAE,KAAKG,cADtC;AACsD,QAAA,KAAK,EAAEc,KAD7D;AAEiB,QAAA,aAAa,EAAE,KAAKhB,aAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AAGH,KAJD,CAFR,CADJ;AAcH;;AA3DqC","sourcesContent":["import React from 'react';\nimport {getAllGraphPosts, getGraphPost} from \"../utils/graph\";\nimport {BlogPostPreview} from \"./BlogPostPreview\";\nimport styled from 'styled-components';\n\n\n\nconst BlogWrapper = styled.div`\n    display: grid;\n    grid-auto-rows: 400px;\n    grid-template-columns: repeat(3,30%);\n    grid-gap: 40px 40px;\n    width: 100vw;\n    padding: 40px;\n`\n\nexport class Blog extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            blogPostsIds: [],\n            siteId: \"a402fab0-dfc9-11e9-815b-41f22eba7175\",\n            activeId: false\n        }\n\n        this.fetchBlogPost = this.fetchBlogPost.bind(this);\n        this.updateActiveId = this.updateActiveId.bind(this);\n    }\n\n    getBlogPostsIds() {\n\n        getAllGraphPosts().then( res => {\n\n            this.setState({blogPostsIds:res.data.blogPosts})\n        })\n\n    }\ncounter = 0\n    async fetchBlogPost(id) {\n        if(this.counter > 0) return false\nthis.counter ++\n        getGraphPost(id).then( res => {\n            console.log(res);\n        })\n    }\n\n    updateActiveId(id) {\n        this.setState({activeId: id})\n    }\n\n    componentDidMount() {\n        this.getBlogPostsIds()\n    }\n\n    render() {\n\n\n        return (\n            <BlogWrapper>\n                {\n                    this.state.blogPostsIds.map(({id}, index) => {\n                        return (<BlogPostPreview id={id} siteId={this.state.siteId} activeId={this.state.activeId}\n                                                 updateActiveId={this.updateActiveId} index={index}\n                                                 fetchBlogPost={this.fetchBlogPost}/>)\n                    })\n                }\n            </BlogWrapper>\n\n        )\n\n\n    }\n\n\n}"]},"metadata":{},"sourceType":"module"}