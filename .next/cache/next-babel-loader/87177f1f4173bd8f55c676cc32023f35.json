{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from 'axios';\nexport function graph(_ref) {\n  var query, variables, data, params, response;\n  return _regeneratorRuntime.async(function graph$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query, variables = _ref.variables;\n          variables = variables ? variables : {};\n          data = {\n            query: query,\n            variables: variables\n          };\n          params = {\n            url: \"https://u8zp940p78.execute-api.us-east-1.amazonaws.com/development/graphiql?variables=%7B%22blogQueryInput%22%3A%20%7B%0A%20%20%22siteId%22%3A%20%22a402fab0-dfc9-11e9-815b-41f22eba7175%22%0A%7D%0A%7D&query=%0Aquery%20(%24blogQueryInput%3A%20blogQueryInput!)%20%7B%0A%20%20BlogPosts(blogQueryInput%3A%20%24blogQueryInput)%20%0A%7D%0A\",\n            method: \"post\",\n            data: data\n          };\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(axios(params));\n\n        case 6:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response.data);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\nexport var getAllGraphPosts = function getAllGraphPosts() {\n  var params, response;\n  return _regeneratorRuntime.async(function getAllGraphPosts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          params = {\n            url: \"api/getAllBlogPosts\",\n            method: \"post\"\n          };\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios(params));\n\n        case 3:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", response.data);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n};\nexport var getGraphPost = function getGraphPost(id) {\n  var params, response;\n  return _regeneratorRuntime.async(function getGraphPost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          console.log('calling');\n          params = {\n            url: \"api/getBlogPost\",\n            method: \"post\",\n            headers: {\n              \"post-id\": id\n            }\n          };\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(axios(params));\n\n        case 4:\n          response = _context3.sent;\n          return _context3.abrupt(\"return\", response.data.blogPost);\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/nhargitt/Documents/convertly/janky2/app/utils/graph.js"],"names":["axios","graph","query","variables","data","params","url","method","response","getAllGraphPosts","getGraphPost","id","console","log","headers","blogPost"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwBC,UAAAA,KAAxB,QAAwBA,KAAxB,EAA+BC,SAA/B,QAA+BA,SAA/B;AAEHA,UAAAA,SAAS,GAAGA,SAAS,GAAGA,SAAH,GAAe,EAApC;AAEMC,UAAAA,IAJH,GAIU;AACTF,YAAAA,KAAK,EAAEA,KADE;AAETC,YAAAA,SAAS,EAAEA;AAFF,WAJV;AASGE,UAAAA,MATH,GASY;AACXC,YAAAA,GAAG,EAAC,8UADO;AAEXC,YAAAA,MAAM,EAAE,MAFG;AAGXH,YAAAA,IAAI,EAAJA;AAHW,WATZ;AAAA;AAAA,2CAeoBJ,KAAK,CAACK,MAAD,CAfzB;;AAAA;AAeGG,UAAAA,QAfH;AAAA,2CAgBIA,QAAQ,CAACJ,IAhBb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBJ,UAAAA,MADsB,GACb;AACXC,YAAAA,GAAG,EAAC,qBADO;AAEXC,YAAAA,MAAM,EAAE;AAFG,WADa;AAAA;AAAA,2CAKLP,KAAK,CAACK,MAAD,CALA;;AAAA;AAKtBG,UAAAA,QALsB;AAAA,4CAOrBA,QAAQ,CAACJ,IAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAUP,OAAO,IAAMM,YAAY,GAAG,SAAfA,YAAe,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACMR,UAAAA,MAFkB,GAET;AACXC,YAAAA,GAAG,EAAC,iBADO;AAEXC,YAAAA,MAAM,EAAE,MAFG;AAGXO,YAAAA,OAAO,EAAC;AAAC,yBAAUH;AAAX;AAHG,WAFS;AAAA;AAAA,2CAODX,KAAK,CAACK,MAAD,CAPJ;;AAAA;AAOlBG,UAAAA,QAPkB;AAAA,4CASjBA,QAAQ,CAACJ,IAAT,CAAcW,QATG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import axios from 'axios';\n\nexport async function graph( { query, variables } ) {\n\n    variables = variables ? variables : {};\n\n    const data = {\n        query: query,\n        variables: variables\n    };\n\n    const params = {\n        url:\"https://u8zp940p78.execute-api.us-east-1.amazonaws.com/development/graphiql?variables=%7B%22blogQueryInput%22%3A%20%7B%0A%20%20%22siteId%22%3A%20%22a402fab0-dfc9-11e9-815b-41f22eba7175%22%0A%7D%0A%7D&query=%0Aquery%20(%24blogQueryInput%3A%20blogQueryInput!)%20%7B%0A%20%20BlogPosts(blogQueryInput%3A%20%24blogQueryInput)%20%0A%7D%0A\",\n        method: \"post\",\n        data,\n    };\n\n    const response = await axios(params);\n    return response.data;\n}\n\nexport const getAllGraphPosts = async () => {\n    const params = {\n        url:\"api/getAllBlogPosts\",\n        method: \"post\",\n    };\n    const response = await axios(params);\n\n    return response.data\n}\n\nexport const getGraphPost = async (id) => {\n    console.log('calling');\n    const params = {\n        url:\"api/getBlogPost\",\n        method: \"post\",\n        headers:{\"post-id\":id}\n    };\n    const response = await axios(params);\n\n    return response.data.blogPost;\n}"]},"metadata":{},"sourceType":"module"}